import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import fs from 'fs';

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

// Ensure dist directory exists
if (!fs.existsSync('dist')) {
    fs.mkdirSync('dist');
}

// Copy static files
fs.copyFileSync('styles.css', 'dist/styles.css');
fs.copyFileSync('manifest.json', 'dist/manifest.json');
fs.copyFileSync('ignored_suggestions.txt', 'dist/ignored_suggestions.txt');

// Copy sql.js WASM file
const wasmPath = 'node_modules/sql.js/dist/sql-wasm.wasm';
if (fs.existsSync(wasmPath)) {
    fs.copyFileSync(wasmPath, 'dist/sql-wasm.wasm');
} else {
    console.warn('sql.js WASM file not found - run npm install first');
}

esbuild.build({
    banner: {
        js: banner,
    },
    entryPoints: ['src/main.ts'],
    bundle: true,
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins
    ],
    format: 'cjs',
    watch: !prod,
    target: 'es2018',
    logLevel: "info",
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outdir: 'dist',
}).catch(() => process.exit(1));
